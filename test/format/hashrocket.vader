Given puppet (simple resource with autoformat while writing):
  file { 'foo':
    ensure => present,
  }

Do (format resource):
  joforce=>true,

Expect puppet (formated resource):
  file { 'foo':
    ensure => present,
    force  => true,
  }

-------------------------------------------------------------------------------

Given puppet (simple resource with gq):
    # Short comment
  file { 'foo':
  ensure => present,
  # mode     => '0700',
      force      =>     true,
  }

Do (format resource):
  gqG

Expect puppet (formated resource):
  # Short comment
  file { 'foo':
    ensure => present,
    # mode     => '0700',
    force  => true,
  }

-------------------------------------------------------------------------------

Given puppet (comment with code snippet with hashrocket):
  # @example: Minimal example for puppet-vim issue
  #   class { 'example1':
  #     attr => 'short attribute',
  #   }
  #
  # @example2: AlignHashrockets goes nuts
  #   class { 'example2':
  #   long_attr 

Do (Add hashrocket in second example):
  GA=>

Expect puppet (example1 untouched):
  # @example: Minimal example for puppet-vim issue
  #   class { 'example1':
  #     attr => 'short attribute',
  #   }
  #
  # @example2: AlignHashrockets goes nuts
  #   class { 'example2':
  #   long_attr =>

