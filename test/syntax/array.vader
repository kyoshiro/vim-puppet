Given puppet (simple array):
  [ 'one', 'two', 'three' ]

Execute (syntax is good):
  AssertEqual 'puppetBracket', SyntaxAt(1,1)
  AssertEqual '', SyntaxAt(1,2)
  AssertEqual SyntaxAt(1,3), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,4), 'puppetString'
  AssertEqual SyntaxAt(1,5), 'puppetString'
  AssertEqual SyntaxAt(1,6), 'puppetString'
  AssertEqual SyntaxAt(1,7), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,8), 'puppetOperator'
  AssertEqual '', SyntaxAt(1,9)
  AssertEqual SyntaxAt(1,10), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,11), 'puppetString'
  AssertEqual SyntaxAt(1,12), 'puppetString'
  AssertEqual SyntaxAt(1,13), 'puppetString'
  AssertEqual SyntaxAt(1,14), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,15), 'puppetOperator'
  AssertEqual '', SyntaxAt(1,16)
  AssertEqual SyntaxAt(1,17), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,18), 'puppetString'
  AssertEqual SyntaxAt(1,19), 'puppetString'
  AssertEqual SyntaxAt(1,20), 'puppetString'
  AssertEqual SyntaxAt(1,21), 'puppetString'
  AssertEqual SyntaxAt(1,22), 'puppetString'
  AssertEqual SyntaxAt(1,23), 'puppetStringDelimiter'
  AssertEqual '', SyntaxAt(1,24)
  AssertEqual 'puppetBracket', SyntaxAt(1,25)

-------------------------------------------------------------------------------

Given puppet (empty array):
  []

Execute (syntax is good):
  AssertEqual 'puppetBracket', SyntaxAt(1,1)
  AssertEqual 'puppetBracket', SyntaxAt(1,2)

-------------------------------------------------------------------------------

Given puppet (nested array):
  ['foo', [ 1,3] ]

Execute (syntax is good):
  AssertEqual 'puppetBracket', SyntaxAt(1,1)
  AssertEqual SyntaxAt(1,2), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,3), 'puppetString'
  AssertEqual SyntaxAt(1,4), 'puppetString'
  AssertEqual SyntaxAt(1,5), 'puppetString'
  AssertEqual SyntaxAt(1,6), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,7), 'puppetOperator'
  AssertEqual '', SyntaxAt(1,8)
  AssertEqual 'puppetBracket', SyntaxAt(1,9)
  AssertEqual '', SyntaxAt(1,10)
  AssertEqual SyntaxAt(1,11), 'puppetInteger'
  AssertEqual SyntaxAt(1,12), 'puppetOperator'
  AssertEqual SyntaxAt(1,13), 'puppetInteger'
  AssertEqual 'puppetBracket', SyntaxAt(1,14)
  AssertEqual '', SyntaxAt(1,15)
  AssertEqual 'puppetBracket', SyntaxAt(1,16)

-------------------------------------------------------------------------------

Given puppet (array with nested hash):
  [1, 2, { 'foo' => 'bar' },]

Execute (syntax is good):
  AssertEqual 'puppetBracket', SyntaxAt(1,1)
  AssertEqual SyntaxAt(1,2), 'puppetInteger'
  AssertEqual SyntaxAt(1,3), 'puppetOperator'
  AssertEqual '', SyntaxAt(1,4)
  AssertEqual SyntaxAt(1,5), 'puppetInteger'
  AssertEqual SyntaxAt(1,6), 'puppetOperator'
  AssertEqual '', SyntaxAt(1,7)
  AssertEqual 'puppetBrace', SyntaxAt(1,8)
  AssertEqual '', SyntaxAt(1,9)
  AssertEqual SyntaxAt(1,10), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,11), 'puppetString'
  AssertEqual SyntaxAt(1,12), 'puppetString'
  AssertEqual SyntaxAt(1,13), 'puppetString'
  AssertEqual SyntaxAt(1,14), 'puppetStringDelimiter'
  AssertEqual '', SyntaxAt(1,15)
  AssertEqual SyntaxAt(1,16), 'puppetOperator'
  AssertEqual SyntaxAt(1,17), 'puppetOperator'
  AssertEqual '', SyntaxAt(1,18)
  AssertEqual SyntaxAt(1,19), 'puppetStringDelimiter'
  AssertEqual SyntaxAt(1,20), 'puppetString'
  AssertEqual SyntaxAt(1,21), 'puppetString'
  AssertEqual SyntaxAt(1,22), 'puppetString'
  AssertEqual SyntaxAt(1,23), 'puppetStringDelimiter'
  AssertEqual '', SyntaxAt(1,24)
  AssertEqual 'puppetBrace', SyntaxAt(1,25)
  AssertEqual SyntaxAt(1,26), 'puppetOperator'
  AssertEqual 'puppetBracket', SyntaxAt(1,27)
